//=============================================================================
// Auxiliary library for Windows API (C++)
//                                                     Copyright (c) 2009 MAYO.
//=============================================================================

#pragma once

#include "wx_misc.h"

namespace wx {

//-----------------------------------------------------------------------------
//! @class	StackedState
//! @brief	階層付きの状態遷移
//-----------------------------------------------------------------------------
template <int D = 3>
class StackedState
{
public:
	StackedState()
		: m_depth(0)
	{
		Clear();
	}

	~StackedState()
	{
	}

	//-------------------------------------------------------------------------
	// 状態設定
	//-------------------------------------------------------------------------
	void SetState(int state)
	{
		m_state[m_depth] = state;
	}

	//-------------------------------------------------------------------------
	// 状態取得
	//-------------------------------------------------------------------------
	int GetState() const
	{
		return m_state[m_depth];
	}

	//-------------------------------------------------------------------------
	// 現在の状態を保存し、次の状態をはじめる
	//-------------------------------------------------------------------------
	void Push(int state)
	{
		WX_ASSERT(m_depth < D - 1);
		if (m_depth < D - 1) {
			m_state[++m_depth] = state;
		}
	}

	//-------------------------------------------------------------------------
	// Push()で保存した状態に戻る
	//-------------------------------------------------------------------------
	void Pop()
	{
		WX_ASSERT(m_depth > 0);
		if (m_depth > 0) {
			m_state[m_depth--] = 0;
		}
	}

	//-------------------------------------------------------------------------
	// 現在の階層を取得
	//-------------------------------------------------------------------------
	int GetDepth() const
	{
		return m_state;
	}

	//-------------------------------------------------------------------------
	// 状態クリア
	//-------------------------------------------------------------------------
	void Clear()
	{
		m_depth = 0;
		for (int i = 0; i < D; ++i) {
			m_state[i] = 0;
		}
	}

	// 以下、補助オペレーター

	//-------------------------------------------------------------------------
	// 代入
	//-------------------------------------------------------------------------
	void operator = (int state)
	{
		SetState(state);
	}

	//-------------------------------------------------------------------------
	// 取得
	//-------------------------------------------------------------------------
	operator int () const
	{
		return GetState();
	}

	//-------------------------------------------------------------------------
	// 同じかどうかを判定
	//-------------------------------------------------------------------------
	bool operator == (int state) const
	{
		return GetState() == state;
	}

	//-------------------------------------------------------------------------
	// 違うかどうかを判定
	//-------------------------------------------------------------------------
	bool operator != (int state) const
	{
		return GetState() != state;
	}

private:
	int	m_state[D];
	int	m_depth;
};

} //namespace wx
